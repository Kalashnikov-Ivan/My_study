==============================
Введение в Python и Processing
==============================

Что такое компьютерная программа?
---------------------------------
Компьютерная программа - это набор **инструкций**, следуя которым компьютер выполняет поставленную задачу.

А программировать - значит составлять для компьютера пошаговые инструкций, объясняющие, что и как ему делать. 

.. figure:: ../img/prog_py.jpeg
    :height: 400px
    :width: 600px
    :align: center
    :alt: Python код

А что понимает компьютер?
-------------------------
Компьютер понимает специальные команды, которые заложены в том или ином **языке программирования**. Один из, которых мы и будем изучать.

Python и Processing
-------------------
`Python <https://ru.wikipedia.org/wiki/Python>`_ (Питон) - это текстовый язык программирования, который применяется в очень многих сферах: на нём можно писать полезные скрипты для взаимодействия с компьютером, программировать искуственный интеллект, делать скрипты для других программ и даже создавать игры и веб-сайты. И многое другое.

.. figure:: ../img/logo_py.png
    :height: 250px
    :width: 500px
    :align: center
    :alt: Логотип Python

Например, вот так выглядит Python-программа, которая просит ввести имя и выводит надпись с приветствием в *консоли* :)

.. code-block:: python

    name = input("Как Вас зовут? ")
    print("Привет,", name)

Мы же будем использовать Python в специальной среде, которая называется **Processing** (Процессинг).

`Processing <https://ru.wikipedia.org/wiki/Processing>`_ - это среда, которая представляет собой лёгкий и быстрый инструментарий для программирования изображений, анимаций и интерфейсов. Она не изменяет сам язык программирования, но дополняет его множеством функций, которые можно использовать в этой среде.

Вообще, в Processing'e можно делать очень много красивых и удивительных вещей. Примеры некоторых из них ты можешь посмотреть в "Файл->Примеры".

А сейчас, давай сами попробуем использовать базовые команды, с которых мы начнём погружение в Python и Processing!

Базовые команды Processing
**************************
Настройка
"""""""""
``size(width, height)`` - задаёт размер окна по ширине (width) и высоте (height).

Например, ``size(600, 400)``. Создаст окно - 600 пикселей в ширину и 400 в высоту.

.. raw:: html

    <hr>

``strokeWeight(weight)`` - задаёт толщину "штриха" (линий и точек).

Например, ``strokeWeight(10)``. Задаст ширину "штриха" - 10 пикселей.

.. raw:: html

    <hr>

``stroke(colorGrey)`` - установить цвет "штриха" на оттенок серого (от 0 до 255).

``stroke(Red, Green, Blue)`` - установить цвет "штриха" в формате RGB - Red, Green, Blue (Красный, зелёный, синий).

Например, ``stroke(125)``. Задаст цвет "штриха" - светло серый.

``stroke(255, 100, 0)``. Задаст цвет "штриха" - оранжевый.

.. raw:: html

    <hr>

``fill(colorGrey)`` - установить цвет заливки фигуры на оттенок серого (от 0 до 255).

``fill(Red, Green, Blue)`` - установить цвет фигуры в формате RGB - Red, Green, Blue.

Например, ``fill(125)``. Задаст цвет фигуры - светло серый.

``fill(0, 100, 255)``. Задаст цвет фигуры - голубой.

.. raw:: html

    <hr>

Фигуры
""""""
``point(x, y)`` - нарисовать точку в координатах (x, y).

Например, ``point(20,40)``. Нарисовать точку на расстоянии 20 от левого края (x=20) и 40 от верхнего (y=40).

.. raw:: html

    <hr>

``line(x1, y1, x2, y2)`` - нарисовать линию, у которой точка начала по координатам (x1, y1), а точка конца (x2, y2).

Например, ``line(0, 0, 100, 100)``. Нарисовать линию из точки-начала (0, 0) в точку-конец (100, 100).

.. raw:: html

    <hr>

``rect(x, y, width, height)`` - нарисовать прямоугольник, в координате (x, y) с указанной шириной (width) и высотой (height). 

Например, ``rect(20, 40, 150, 100)``. Нарисовать прямоугольник в точке (20, 40) с шириной 150 и высотой 100.

.. raw:: html

    <hr>

``ellipse(x, y, width, height)`` - нарисовать элипс (круг), в координате (x, y) с указанной шириной (width) и высотой (height). 

Например, ``ellipse(50, 50, 30, 30)``. Нарисовать элипс в точке (50, 50) с шириной 30 и высотой 30.

.. raw:: html

    <hr>

``triangle(x1, y1, x2, y2, x3, y3)`` - нарисовать треугольник, вершины с вершинами в (x1, y1), (x2, y2), (x3, y3). 

Например, ``triangle(40, 100, 60, 20, 150, 100)``. Нарисовать прямоугольник с вершинами (40, 100), (60, 20), (150, 100).

.. raw:: html

    <hr>